{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/admin/admin.service.ts","./src/app/admin/create-admin/create-admin.component.ts","./src/app/admin/create-admin/create-admin.component.html","./src/app/admin/create-approver/create-approver.component.ts","./src/app/admin/create-approver/create-approver.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/login/login.service.ts","./src/app/authentication/register/register.component.ts","./src/app/authentication/register/register.component.html","./src/app/authentication/register/register.service.ts","./src/app/complaint/complaint-routing.module.ts","./src/app/complaint/complaint.module.ts","./src/app/complaint/complaint.service.ts","./src/app/complaint/create/create.component.ts","./src/app/complaint/create/create.component.html","./src/app/complaint/list/list.component.ts","./src/app/complaint/list/list.component.html","./src/app/shared/error-interceptor.service.ts","./src/app/shared/home/home.component.ts","./src/app/shared/home/home.component.html","./src/app/shared/interceptor.service.ts","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/navbar/navbar.component.html","./src/app/shared/pagination/pagination.component.ts","./src/app/shared/pagination/pagination.component.html","./src/app/shared/pop-up/animations.ts","./src/app/shared/pop-up/pop-up.component.ts","./src/app/shared/pop-up/pop-up.component.html","./src/app/shared/rouer-ext.service.ts","./src/app/shared/shared-routing.module.ts","./src/app/shared/shared.module.ts","./src/app/users/list/list.component.ts","./src/app/users/list/list.component.html","./src/app/users/user.service.ts","./src/app/users/users-routing.module.ts","./src/app/users/users.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateAdminComponent } from './create-admin/create-admin.component';\nimport { CreateApproverComponent } from './create-approver/create-approver.component';\n\n\nconst routes: Routes = [\n  { path: 'create/approver', component: CreateApproverComponent },\n  { path: 'create/admin', component: CreateAdminComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { CreateApproverComponent } from './create-approver/create-approver.component';\nimport { CreateAdminComponent } from './create-admin/create-admin.component';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n\n\n@NgModule({\n  declarations: [ CreateApproverComponent, CreateAdminComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AdminRoutingModule,\n    NgxSpinnerModule,\n  ],\n  exports: [\n    CreateApproverComponent,\n    CreateAdminComponent\n  ]\n})\nexport class AdminModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  adminUrl = environment.apiUrl + \"admins/\"\n  constructor(private http: HttpClient) { }\n\n  registerApprover(data) {\n    return this.http.post(this.adminUrl + \"create-approver\", data)\n  }\n\n  registerAdmin(data) {\n    return this.http.post(this.adminUrl + \"create-admin\", data)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AdminService } from '../admin.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-admin',\n  templateUrl: './create-admin.component.html',\n  styleUrls: ['./create-admin.component.css']\n})\nexport class CreateAdminComponent implements OnInit {\n\n\n  registerForm: FormGroup;\n  constructor(private fb: FormBuilder, private adminService: AdminService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      phone: ['', Validators.required],\n\n    })\n  }\n\n  register() {\n    this.adminService.registerAdmin(this.registerForm.value).subscribe(res => {\n      this.router.navigate(['complaints']);\n    })\n  }\n\n}\n","<div class=\"container-fluid\">\n    <h1>Create an administrator</h1>\n    <div class=\"row\">\n        <div class=\"col-lg-4\"></div>\n            <div class=\"col-lg-4\">\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n                    <div class=\"form-group\">\n                        <label>Email address</label>\n                        <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>First Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"first_name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Last Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"last_name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Phone</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"phone\">\n                    </div>\n                          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n        <div class=\"col-lg-4\"></div>\n    </div>\n</div>\n\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AdminService } from '../admin.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-create-approver',\n  templateUrl: './create-approver.component.html',\n  styleUrls: ['./create-approver.component.css']\n})\nexport class CreateApproverComponent implements OnInit {\n\n  registerForm: FormGroup;\n  constructor(private fb: FormBuilder, \n    private spinner: NgxSpinnerService,\n    private cd: ChangeDetectorRef, \n    private adminService: AdminService, \n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      phone: ['', Validators.required],\n      certificate: [''],\n      extension: [''],\n    })\n  }\n\n  register() {\n    if (this.registerForm.get(\"certificate\").value.startsWith(\"data:\")) {\n      console.log(\"aha \")\n      var truncated_base64 = this.registerForm.get(\"certificate\").value.split(',')[1];\n      this.registerForm.patchValue({\n        certificate: truncated_base64\n      });\n    }\n    this.spinner.show();\n\n    this.adminService.registerApprover(this.registerForm.value).subscribe(res => {\n      this.router.navigate(['complaints']);\n      this.spinner.hide();\n\n    })\n  }\n\n  onFileChange(event) {\n    let reader = new FileReader();\n   \n    if(event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      const extension = event.target.files[0].name.split('.').at(-1)\n      this.registerForm.patchValue({\n        extension: extension\n      });\n      reader.readAsDataURL(file);\n    \n      reader.onload = () => {\n        this.registerForm.patchValue({\n          certificate: reader.result\n        });\n        \n        // need to run CD since file load runs outside of zone\n        this.cd.markForCheck();\n      };\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n    <h1>Create an approver</h1>\n    <div class=\"row\">\n        <div class=\"col-lg-4\"></div>\n            <div class=\"col-lg-4\">\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n                    <div class=\"form-group\">\n                        <label>Email address</label>\n                        <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>First Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"first_name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Last Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"last_name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Phone</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"phone\">\n                    </div>\n                    <div class=\"from-group\">\n                        <label>Photo</label>\n                        <input type=\"file\" class=\"form-control\" (change)=\"onFileChange($event)\" >                    \n                    </div>\n                    <ngx-spinner\n                    bdColor=\"rgba(51,51,51,0.8)\"\n                    size=\"medium\"\n                    color=\"#fff\"\n                    type=\"ball-scale-multiple\"\n                  >\n                    <p style=\"font-size: 20px; color: white\">Loading...</p>\n                  </ngx-spinner>\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n \n\n                </form>\n            </div>\n        <div class=\"col-lg-4\"></div>\n    </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => import('./authentication/authentication-routing.module').then(m => m.AuthenticationRoutingModule)\n  },\n  {\n    path: 'complaints',\n    loadChildren: () => import('./complaint/complaint-routing.module').then(m => m.ComplaintRoutingModule)\n  },\n  {\n    path: 'admins',\n    loadChildren: () => import('./admin/admin-routing.module').then(m => m.AdminRoutingModule)\n  },\n  {\n    path: 'users',\n    loadChildren: () => import('./users/users-routing.module').then(m => m.UsersRoutingModule)\n  },\n  {\n    path: '',\n    loadChildren: () => import('./shared/shared-routing.module').then(m => m.SharedRoutingModule)\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'complaintsSystem';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { SharedModule } from './shared/shared.module';\nimport { ComplaintModule } from './complaint/complaint.module';\nimport { AdminModule } from './admin/admin.module';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { UsersModule } from './users/users.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgxSpinnerModule,\n\n    AppRoutingModule,\n    SharedModule,\n    AuthenticationModule,\n    ComplaintModule,\n    AdminModule,\n    UsersModule,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { RegisterComponent } from './register/register.component';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AuthenticationRoutingModule,\n  ],\n  exports: [\n    LoginComponent,\n    RegisterComponent,\n  ]\n})\nexport class AuthenticationModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FormGroup, FormBuilder } from 'ngx-strongly-typed-forms';\nimport { LoginService } from './login.service';\nimport { LoginFormModel } from './login.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RouterExtService } from 'src/app/shared/rouer-ext.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup<LoginFormModel>;\n  returnUrl: string;\n  @Output() emitter: EventEmitter<string> = new EventEmitter<string>();\n  whoAmI: string = \"\";\n\n  constructor(private fb: FormBuilder, private loginService: LoginService, private route: ActivatedRoute, private router: Router,private routerService: RouterExtService) { \n    if(localStorage.getItem('token')) {\n      this.router.navigate(['complaints'])\n    }\n  }\n\n  ngOnInit(): void {\n    localStorage.removeItem('token');\n    this.loginForm = this.fb.group<LoginFormModel>({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    })\n  }\n\n  changeWhoAmI(choice) {\n    console.log(choice)\n    this.whoAmI = choice\n  }\n\n  login() {\n    this.loginService.login(this.loginForm.value, this.whoAmI).subscribe(res => {\n      this.loginService.setTToken(res['token']);\n      this.loginService.setRole(res[\"role\"])\n      window.location.reload()\n\n      this.router.navigate(['complaints']);\n      \n\n    })\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-4\"></div>\n            <div class=\"col-lg-4\">\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                    <div class=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n                    </div>\n                    <div class=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\">\n                    </div>\n                    <!-- <div class=\"form-group\">\n                        <label class=\"my-1 mr-2\" for=\"inlineFormCustomSelectPref\">I am</label>\n                        <select class=\"custom-select my-1 mr-sm-2\" #mySelect id=\"inlineFormCustomSelectPref\" (change)=\"changeWhoAmI(mySelect.value)\">\n                          <option selected value=\"\">Complainer</option>\n                          <option value=\"approvers/\">Approver</option>\n                          <option value=\"admins/\">Admin</option>\n                        </select>\n                    </div> -->\n                    <p>Does not have an account? <a [routerLink]=\"['register']\" >Sign up</a></p>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loginForm.invalid\">Submit</button>\n                </form>\n            </div>\n        <div class=\"col-lg-4\"></div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  loginURL: string = environment.apiUrl ;\n  constructor(private http: HttpClient) { }\n\n  login(payload, url): Observable<any> {\n    console.log('whoami', url)\n      return this.http.post(this.loginURL + url  + \"login\", payload);\n  }\n\n  setTToken(token) {\n    localStorage.setItem('token', token);\n  }\n\n  setRole(role) {\n    localStorage.setItem('role', role);\n  }\n\n  setId(dealerId) {\n    localStorage.setItem('dealerId', dealerId);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport {  FormBuilder, FormGroup,Validators } from '@angular/forms';\nimport { RegisterService } from './register.service';\nimport { Router } from '@angular/router';\nimport { RegisterModelForm } from './register.model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  loginForm: FormGroup;\n  constructor(private fb: FormBuilder, private registerService: RegisterService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      phone: ['', Validators.required],\n      iban: ['', [Validators.required, Validators.minLength(22), Validators.maxLength(22)]]\n    })\n  }\n\n  login() {\n    this.registerService.register(this.loginForm.value).subscribe(res => {\n      this.router.navigate(['auth']);\n    })\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-4\"></div>\n            <div class=\"col-lg-4\">\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                    <div class=\"form-group\">\n                        <label>Email address</label>\n                        <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>First Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"first_name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Last Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"last_name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Phone</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"phone\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>IBAN</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"iban\">\n                    </div>\n                    <p>Already have an account? <a [routerLink]=\"['/auth']\">Sign in</a></p>\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n        <div class=\"col-lg-4\"></div>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  registerPath: string = environment.apiUrl + \"register\"\n  constructor(private http: HttpClient) { }\n\n  register(payload): Observable<any> {\n      return this.http.post(this.registerPath, payload);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateComponent } from './create/create.component';\nimport { ListComponent } from './list/list.component';\n\nconst routes: Routes = [\n  { path: '', component: ListComponent },\n  { path: 'create', component: CreateComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class ComplaintRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreateComponent } from './create/create.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ComplaintRoutingModule } from './complaint-routing.module';\nimport { ListComponent } from './list/list.component';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n\n\n@NgModule({\n  declarations: [CreateComponent, ListComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ComplaintRoutingModule,\n    NgxSpinnerModule\n  ],\n  exports: [\n    CreateComponent, ListComponent\n  ]\n})\nexport class ComplaintModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComplaintService {\n  complaintsPath: string = environment.apiUrl + \"complaints\";\n  approversPath : string = environment.apiUrl + \"complaints/\"\n  adminPath: string = environment.apiUrl + \"complaints/\";\n\n  constructor(private http: HttpClient) { }\n  \n  getAll() {\n    return this.http.get(this.complaintsPath)\n  }\n\n  create(data) {\n    console.log('service')\n    return this.http.post(this.complaintsPath, data)\n  }\n\n  approve(id) {\n    return this.http.put(this.approversPath + id + \"/approve\", {})\n  }\n\n  reject(id) {\n    \n    return this.http.put(this.approversPath + id + \"/reject\", {})\n  }\n\n  delete(id) {\n    return this.http.delete(this.adminPath + id)\n  }\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ComplaintService } from '../complaint.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  complainForm: FormGroup;\n\n  constructor(private fb: FormBuilder, \n    private spinner: NgxSpinnerService,\n    private cd: ChangeDetectorRef, \n    private complaintService: ComplaintService,\n    private router: Router) { \n    this.complainForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      amount: ['', Validators.required],\n      encoded_photo: [''],\n      extension: [''] \n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  create() {\n    console.log(this.complainForm);\n    this.spinner.show();\n\n    if (this.complainForm.get(\"encoded_photo\").value.startsWith(\"data:\")) {\n      console.log(\"aha \")\n      var truncated_base64 = this.complainForm.get(\"encoded_photo\").value.split(',')[1];\n      this.complainForm.patchValue({\n        encoded_photo: truncated_base64\n      });\n    }\n    this.complaintService.create(this.complainForm.value).subscribe(data => {\n      console.log(data);\n      this.spinner.hide();\n\n      this.router.navigate(['complaints'])\n    })\n  }\n\n  \n  onFileChange(event) {\n    let reader = new FileReader();\n   \n    if(event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      const extension = event.target.files[0].name.split('.').at(-1)\n      this.complainForm.patchValue({\n        extension: extension\n      });\n      reader.readAsDataURL(file);\n    \n      reader.onload = () => {\n        this.complainForm.patchValue({\n          encoded_photo: reader.result\n        });\n        \n        // need to run CD since file load runs outside of zone\n        this.cd.markForCheck();\n      };\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-4\"></div>\n            <div class=\"col-lg-4\">\n                <form [formGroup]=\"complainForm\" (ngSubmit)=\"create()\">\n                    <div class=\"form-group\">\n                    <label>Title</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"title\">\n                    </div>\n                    <div class=\"form-group\">\n                    <label>Description</label>\n                    <textarea class=\"form-control\" rows=10 formControlName=\"description\"></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Amount</label>\n                        <input type=\"number\" class=\"form-control\" formControlName=\"amount\">\n                    </div>\n                    <!-- <div class=\"form-group\">\n                        <label>Encoded photo</label>\n                        <textarea class=\"form-control\" rows=10 formControlName=\"photo\"></textarea>\n                    </div> -->\n                    <!-- <div class=\"form-group\">\n                        <label>Amount</label>\n                        <input type=\"number\" class=\"form-control\" formControlName=\"amount\">\n                    </div> -->\n                    <div class=\"from-group\">\n                          <label>Photo</label>\n                          <input type=\"file\" class=\"form-control\" (change)=\"onFileChange($event)\" >                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                    <ngx-spinner\n                    bdColor=\"rgba(51,51,51,0.8)\"\n                    size=\"medium\"\n                    color=\"#fff\"\n                    type=\"ball-scale-multiple\"\n                  >\n                    <p style=\"font-size: 20px; color: white\">Loading...</p>\n                  </ngx-spinner>\n                </form>\n            </div>\n        <div class=\"col-lg-4\"></div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ComplaintService } from '../complaint.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  complaints;\n  display;\n  role;\n  constructor(private complaintsService: ComplaintService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.role = localStorage.getItem(\"role\")\n    this.display = this.role == 'complainer' ? true : false\n    this.complaintsService.getAll().subscribe(data => {\n      this.complaints = data\n    })\n  }\n\n  redirectToCreate() {\n    this.router.navigate(['complaints/create'])\n  }\n\n  approve(id) {\n    this.complaintsService.approve(id).subscribe(data => {\n      location.reload()\n    })\n  }\n\n  reject(id) {\n    this.complaintsService.reject(id).subscribe(data => {\n      location.reload()\n    })\n  }\n\n  delete(id) {\n    this.complaintsService.delete(id).subscribe(data => {\n      location.reload()\n    })\n  }\n\n  listUers() {\n    this.router.navigate([\"users\"])\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\" style=\"margin: 2rem;\" *ngIf=\"display\">\n        <div class=\"col-lg-4\">\n            <button class=\"btn btn-success\" (click)=\"redirectToCreate()\">Create new complaint</button>\n        </div>\n    </div>\n    <div class=\"row\" style=\"margin: 2rem;\" *ngIf=\"role == 'admin'\">\n        <div class=\"col-lg-4\">\n            <button class=\"btn btn-warning\" (click)=\"listUers()\">Change roles</button>\n        </div>\n    </div>\n    <div class=\"row\" style=\"margin-top: 2rem;\">\n        <div class=\"col-lg-4\" *ngFor=\"let c of complaints\">\n            <div class=\"card\" style=\"width: 18rem;margin-top: 2rem;\">\n                <img class=\"card-img-top\" style=\"object-fit: cover;\" [src]=\"c.photo_url\" alt=\"Card image cap\">\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">{{c.title}}</h5>\n                  <h6 class=\"card-title\">{{c.create_on}}</h6>\n                  <p class=\"card-text\">{{c.description}}</p>\n                  <p class=\"card-text\">{{c.amount}}</p>\n                  <p class=\"card-text\">{{c.status}}</p>\n                 <div *ngIf=\"role == 'approver'\">\n                    <a (click)=\"approve(c.id)\" class=\"btn btn-success\">Approve</a>\n                    <a (click)=\"reject(c.id)\" class=\"btn btn-warning\">Reject</a>\n                 </div>\n                 <div *ngIf=\"role == 'admin'\">\n                    <a (click)=\"delete(c.id)\" class=\"btn btn-danger\">Delete</a>\n                 </div>\n                </div>\n              </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorInterceptorService  implements HttpInterceptor {\n  constructor(public router: Router, private toastr: ToastrService) {\n  }\n \n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n \n    return next.handle(req).pipe(\n      catchError((error) => {\n        console.log(error)\n\n        if(error.error) {\n          this.toastr.error(\"Error\", error.error.message, {\n            timeOut: 0,\n            extendedTimeOut: 0\n          })\n        }\n        \n       \n        return throwError(error.error);\n      })\n    )\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  categories: Array<any>;\n  constructor( private router: Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          \n              <h1>Welcome to Complain system</h1>\n            </div>\n    </div>\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService {\n\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler, ) {\n    console.log(\"Intersepting\")\n    request = request.clone({\n      setHeaders: {\n        'Content-Type' : 'application/json',\n        'Authorization': `Bearer ${this.getToken()}`\n      }\n    });\n    console.log(request)\n\n    return next.handle(request);\n  }\n\n  getToken() {\n    return localStorage.getItem('token')\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  token: string;\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.getToken()\n  }\n\n  getToken() {\n    this.token = localStorage.getItem('token')\n  }\n\n  route(param) {\n    console.log(param)\n    this.router.navigate([param])\n  }\n\n  chanheNav(event) {\n    console.log(event)\n  }\n\n  logout() {\n    localStorage.removeItem('token')\n    this.getToken()\n    this.router.navigate(['auth'])\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-secondary\">\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" (click)=\"route('')\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n\n\n<!-- \n        <li class=\"nav-item\" *ngIf=\"token\">\n            <a class=\"nav-link\"(click)=\"route('dealers/me')\">Profile</a>\n          </li> -->\n        <li class=\"nav-item\" *ngIf=\"token\">\n            <a class=\"nav-link\"(click)=\"logout()\">Logout</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"!token\">\n            <a class=\"nav-link\" (click)=\"route('auth')\">Login</a>\n          </li>\n      </ul>\n    </div>\n  </nav>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n  // @Input('queryString') queryString;\n  // @Output('emitter') emitter = new EventEmitter<Array<Car>>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changePage() {\n\n  }\n\n}\n","<nav aria-label=\"Page navigation example\">\n    <ul class=\"pagination\">\n      <li class=\"page-item\"><a class=\"page-link\" (click)=\"changePage()\">Previous</a></li>\n      <li class=\"page-item\"><a class=\"page-link\"(click)=\"changePage()\">Next</a></li>\n    </ul>\n  </nav>\n","import { \n    trigger, state, style, animate, transition,\n  } from '@angular/animations';\nimport { getCurrencySymbol } from '@angular/common';\n  \n  export const openCloseAnimation = trigger('openClose', [\n    state('open', style({\n      opacity: 1,\n      transform: 'scale(1)',\n    })),\n    state('closed', style({\n      opacity: 0,\n      transform: 'scale(0)',\n      display: 'none',\n    })),\n    transition('open => closed, closed => open', [\n      animate('0.25s')\n    ]),\n  ]);\n  \n  export const openCloseShadeAnimation = trigger('openCloseShade', [\n    state('open', style({\n      opacity: .7,\n      backgroundColor: 'grey',\n    })),\n    state('closed', style({\n      opacity: 0,\n      display: 'none',\n    })),\n    transition('open => closed, closed => open', [\n      animate('0.25s')\n    ]),\n  ]);","import { Component, Input, OnInit } from '@angular/core';\nimport { openCloseAnimation, openCloseShadeAnimation } from './animations';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-pop-up',\n  templateUrl: './pop-up.component.html',\n  styleUrls: ['./pop-up.component.scss'],\n  animations: [\n    openCloseAnimation,\n    openCloseShadeAnimation,\n  ]\n})\nexport class PopUpComponent implements OnInit {\n  @Input() isOpen = false;\n  @Input() permissionsInput;\n\n  permissionsForm: FormGroup;\n  constructor() {\n\n  }\n\n  ngOnInit() {\n\n  }\n}\n","<div class=\"shade\" [@openCloseShade]=\"isOpen ? 'open' : 'closed'\">&nbsp;</div>\n<div class=\"pop-up\" [@openClose]=\"isOpen ? 'open' : 'closed'\">\n  <ng-content></ng-content>\n</div>","import { Injectable } from '@angular/core';\nimport { Router, RouterEvent, NavigationEnd } from '@angular/router';\n\n@Injectable()\nexport class RouterExtService {\n\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(private router: Router) {\n    this.currentUrl = this.router.url;\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.previousUrl = this.currentUrl;\n        this.currentUrl = event.url;\n      }\n    });\n  }\n\n  public getPreviousUrl() {\n    return this.previousUrl;\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n    {\n      path: '',\n      component: HomeComponent\n    },\n  ];\n  \n  @NgModule({\n    imports: [\n      RouterModule.forChild(routes)\n    ],\n    exports: [RouterModule]\n  })\n  export class SharedRoutingModule { }\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgxStronglyTypedFormsModule } from 'ngx-strongly-typed-forms';\nimport { ModalModule } from 'angular-custom-modal';\nimport { PopUpComponent } from './pop-up/pop-up.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InterceptorService } from './interceptor.service';\nimport { RouterExtService } from './rouer-ext.service';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ErrorInterceptorService } from './error-interceptor.service';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { SharedRoutingModule } from './shared-routing.module';\nimport { PaginationComponent } from './pagination/pagination.component';\n\n\n@NgModule({\n  declarations: [PopUpComponent, NavbarComponent, HomeComponent, PaginationComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxStronglyTypedFormsModule,\n    ModalModule,\n    ToastrModule.forRoot(),\n    SharedRoutingModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: InterceptorService,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptorService,\n      multi: true\n    },\n    RouterExtService,\n  ],\n  exports: [ReactiveFormsModule,    FormsModule,\n    ModalModule, PopUpComponent, NavbarComponent, PaginationComponent]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  users;\n  constructor(private userService: UserService) { \n    this.getUsers()\n  }\n\n  getUsers() {\n    this.userService.getAll().subscribe(data => {\n      this.users = data\n  })\n  }\n\n  makeApprover(id) {\n      this.userService.makeApprover(id).subscribe(data => {\n        this.getUsers()\n      })\n  }\n\n  makeAdmin(id) {\n    this.userService.makeAdmin(id).subscribe(data => {\n      this.getUsers()\n    })\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">First</th>\n        <th scope=\"col\">Last</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Role</th>\n        <th scope=\"col\">Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let u of users\">\n        <th scope=\"row\">{{u.id}}</th>\n        <td>{{u.first_name}}</td>\n        <td>{{u.last_name}}</td>\n        <td>{{u.email}}</td>\n        <td>{{u.role}}</td>\n        <td>\n          <button class=\"btn btn-primary\" (click)=\"makeApprover(u.id)\">Make approver</button>\n          <button class=\"btn btn-warning\" (click)=\"makeAdmin(u.id)\">Make admin</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get(environment.apiUrl + \"users\")\n\n  }\n\n  makeApprover(id) {\n    return this.http.put(environment.apiUrl + \"users/\" + id + \"/make-approver\", {})\n  }\n\n  makeAdmin(id) {\n    return this.http.put(environment.apiUrl + \"users/\" + id + \"/make-admin\", {})\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListComponent } from \"./list/list.component\"\n\nconst routes: Routes = [\n  { path: '', component: ListComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { ListComponent } from './list/list.component';\n\n\n\n@NgModule({\n  declarations: [ListComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    UsersRoutingModule,\n    NgxSpinnerModule\n  ]\n})\nexport class UsersModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://127.0.0.1:8000/\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}